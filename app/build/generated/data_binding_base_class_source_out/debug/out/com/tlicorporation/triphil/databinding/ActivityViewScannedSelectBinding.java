// Generated by view binder compiler. Do not edit!
package com.tlicorporation.triphil.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tlicorporation.triphil.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewScannedSelectBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnVssDelete;

  @NonNull
  public final EditText etCarton;

  @NonNull
  public final EditText etModel;

  @NonNull
  public final EditText etQty;

  @NonNull
  public final LinearLayout linearLayout2;

  private ActivityViewScannedSelectBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnVssDelete, @NonNull EditText etCarton, @NonNull EditText etModel,
      @NonNull EditText etQty, @NonNull LinearLayout linearLayout2) {
    this.rootView = rootView;
    this.btnVssDelete = btnVssDelete;
    this.etCarton = etCarton;
    this.etModel = etModel;
    this.etQty = etQty;
    this.linearLayout2 = linearLayout2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewScannedSelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewScannedSelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_scanned_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewScannedSelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_vss_delete;
      Button btnVssDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnVssDelete == null) {
        break missingId;
      }

      id = R.id.etCarton;
      EditText etCarton = ViewBindings.findChildViewById(rootView, id);
      if (etCarton == null) {
        break missingId;
      }

      id = R.id.etModel;
      EditText etModel = ViewBindings.findChildViewById(rootView, id);
      if (etModel == null) {
        break missingId;
      }

      id = R.id.etQty;
      EditText etQty = ViewBindings.findChildViewById(rootView, id);
      if (etQty == null) {
        break missingId;
      }

      LinearLayout linearLayout2 = (LinearLayout) rootView;

      return new ActivityViewScannedSelectBinding((LinearLayout) rootView, btnVssDelete, etCarton,
          etModel, etQty, linearLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
