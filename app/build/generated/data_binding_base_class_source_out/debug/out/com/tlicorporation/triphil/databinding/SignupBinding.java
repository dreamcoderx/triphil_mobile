// Generated by view binder compiler. Do not edit!
package com.tlicorporation.triphil.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tlicorporation.triphil.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSignUp;

  @NonNull
  public final EditText edtConfirmPassword;

  @NonNull
  public final EditText edtPassword;

  @NonNull
  public final EditText edtUsername;

  @NonNull
  public final LinearLayout lvparent;

  @NonNull
  public final ProgressBar pbScan;

  @NonNull
  public final Spinner spnrUserRole;

  private SignupBinding(@NonNull LinearLayout rootView, @NonNull Button btnSignUp,
      @NonNull EditText edtConfirmPassword, @NonNull EditText edtPassword,
      @NonNull EditText edtUsername, @NonNull LinearLayout lvparent, @NonNull ProgressBar pbScan,
      @NonNull Spinner spnrUserRole) {
    this.rootView = rootView;
    this.btnSignUp = btnSignUp;
    this.edtConfirmPassword = edtConfirmPassword;
    this.edtPassword = edtPassword;
    this.edtUsername = edtUsername;
    this.lvparent = lvparent;
    this.pbScan = pbScan;
    this.spnrUserRole = spnrUserRole;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSignUp;
      Button btnSignUp = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUp == null) {
        break missingId;
      }

      id = R.id.edtConfirmPassword;
      EditText edtConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtConfirmPassword == null) {
        break missingId;
      }

      id = R.id.edtPassword;
      EditText edtPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtPassword == null) {
        break missingId;
      }

      id = R.id.edtUsername;
      EditText edtUsername = ViewBindings.findChildViewById(rootView, id);
      if (edtUsername == null) {
        break missingId;
      }

      LinearLayout lvparent = (LinearLayout) rootView;

      id = R.id.pbScan;
      ProgressBar pbScan = ViewBindings.findChildViewById(rootView, id);
      if (pbScan == null) {
        break missingId;
      }

      id = R.id.spnrUserRole;
      Spinner spnrUserRole = ViewBindings.findChildViewById(rootView, id);
      if (spnrUserRole == null) {
        break missingId;
      }

      return new SignupBinding((LinearLayout) rootView, btnSignUp, edtConfirmPassword, edtPassword,
          edtUsername, lvparent, pbScan, spnrUserRole);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
